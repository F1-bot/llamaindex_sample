import asyncio
import os
from llama_index.llms.ollama import Ollama
from llama_index.core.agent.workflow import FunctionAgent
from llama_index.tools.arxiv import ArxivToolSpec
from llama_index.core.tools import FunctionTool

print("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è LLM (qwen3:8b)...")
llm = Ollama(model="qwen3:8b", request_timeout=300.0)

print("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤...")
arxiv_spec = ArxivToolSpec()

def write_report(filename: str, content: str) -> str:
    """–ó–∞–ø–∏—Å—É—î —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç —É Markdown —Ñ–∞–π–ª."""
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(content)
        return f"–ó–≤—ñ—Ç —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª {filename}"
    except Exception as e:
        return f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∑–≤—ñ—Ç—É: {e}"

all_tools = arxiv_spec.to_tool_list() + [FunctionTool.from_defaults(fn=write_report)]

print("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–≥–µ–Ω—Ç–∞ '–ù–∞—É–∫–æ–≤–∏–π –î–∞–π–¥–∂–µ—Å—Ç'...")
system_prompt = """
–¢–∏ ‚Äì AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç "–ù–∞—É–∫–æ–≤–∏–π –î–∞–π–¥–∂–µ—Å—Ç". –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äì —à—É–∫–∞—Ç–∏ –Ω–∞—É–∫–æ–≤—ñ —Å—Ç–∞—Ç—Ç—ñ –Ω–∞ Arxiv.org —Ç–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π –∑–≤—ñ—Ç.

–¢–≤—ñ–π –ø–ª–∞–Ω –¥—ñ–π:
1.  **–ü–æ—à—É–∫:** –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç `arxiv_search` –¥–ª—è –ø–æ—à—É–∫—É —Å—Ç–∞—Ç–µ–π –∑–∞ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏.
2.  **–ê–Ω–∞–ª—ñ–∑:** –î–ª—è –∫–æ–∂–Ω–æ—ó –∑–Ω–∞–π–¥–µ–Ω–æ—ó —Å—Ç–∞—Ç—Ç—ñ —É–≤–∞–∂–Ω–æ –≤–∏—Ç—è–≥–Ω–∏ –Ω–∞—Å—Ç—É–ø–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é:
    *   –ù–∞–∑–≤–∞ —Å—Ç–∞—Ç—Ç—ñ (Title)
    *   –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä—ñ–≤ (Authors)
    *   –ü–æ–≤–Ω–∞ –∞–Ω–æ—Ç–∞—Ü—ñ—è (Abstract/Summary)
    *   –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–∞—Ç—Ç—é (URL)
3.  **–§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–≤—ñ—Ç—É:** –°—Ç–≤–æ—Ä–∏ –∑–≤—ñ—Ç —É —Ñ–æ—Ä–º–∞—Ç—ñ Markdown. –î–æ—Ç—Ä–∏–º—É–π—Å—è **–¥—É–∂–µ —á—ñ—Ç–∫–æ** –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω—É –¥–ª—è –∫–æ–∂–Ω–æ—ó —Å—Ç–∞—Ç—Ç—ñ:

    ---
    ### **–ù–∞–∑–≤–∞ —Å—Ç–∞—Ç—Ç—ñ**
    **–ê–≤—Ç–æ—Ä–∏:** *–Ü–º'—è –ê–≤—Ç–æ—Ä–∞ 1, –Ü–º'—è –ê–≤—Ç–æ—Ä–∞ 2, ...*
    **–ü–æ—Å–∏–ª–∞–Ω–Ω—è:** [–ß–∏—Ç–∞—Ç–∏ –Ω–∞ Arxiv](URL_—Å—Ç–∞—Ç—Ç—ñ)

    **–ê–Ω–æ—Ç–∞—Ü—ñ—è:**
    > –ü–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç –∞–Ω–æ—Ç–∞—Ü—ñ—ó...
    ---

4.  **–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è:** –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç `write_report`, —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç —É —Ñ–∞–π–ª.
"""

agent = FunctionAgent(
    tools=all_tools,
    llm=llm,
    system_prompt=system_prompt,
    verbose=True
)

async def main():
    task = (
        "–ó–Ω–∞–π–¥–∏ 2 –Ω–∞–π–Ω–æ–≤—ñ—à—ñ —Å—Ç–∞—Ç—Ç—ñ –Ω–∞ Arxiv –∑–∞ —Ç–µ–º–æ—é 'Multimodal Large Language Models'. "
        "–°—Ç–≤–æ—Ä–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç –∑ —ó—Ö –Ω–∞–∑–≤–∞–º–∏, –∞–≤—Ç–æ—Ä–∞–º–∏, –∞–Ω–æ—Ç–∞—Ü—ñ—è–º–∏ —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏. "
        "–ó–±–µ—Ä–µ–∂–∏ –∑–≤—ñ—Ç —É —Ñ–∞–π–ª 'multimodal_llm_digest.md'."
    )

    print(f"\nüöÄ –ó–∞–ø—É—Å–∫–∞—é –∞–≥–µ–Ω—Ç–∞ —ñ–∑ –∑–∞–≤–¥–∞–Ω–Ω—è–º: '{task}'\n")
    response = await agent.run(user_msg=task)

    print("\n‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ!")
    print(f"–§—ñ–Ω–∞–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–≥–µ–Ω—Ç–∞: {response}")

    report_path = 'multimodal_llm_digest.md'
    if os.path.exists(report_path):
        print(f"\n–ó–≤—ñ—Ç –∑–Ω–∞–π–¥–µ–Ω–æ –≤ '{report_path}'. –ô–æ–≥–æ –≤–º—ñ—Å—Ç:")
        with open(report_path, 'r', encoding='utf-8') as f:
            print("---")
            print(f.read().strip())
            print("---")
    else:
        print(f"–ó–≤—ñ—Ç–Ω–∏–π —Ñ–∞–π–ª '{report_path}' –Ω–µ –±—É–ª–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ.")

if __name__ == "__main__":
    asyncio.run(main())