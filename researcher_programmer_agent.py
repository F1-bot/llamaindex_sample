import asyncio
import os
import subprocess

from llama_index.core.tools import FunctionTool
from llama_index.llms.ollama import Ollama
from llama_index.core.agent.workflow import FunctionAgent

from llama_index.tools.wikipedia import WikipediaToolSpec

print("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è LLM (qwen3:8b)...")
llm = Ollama(model="qwen3:8b", request_timeout=300.0)

print("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤...")

wiki_spec = WikipediaToolSpec()
wiki_tools = wiki_spec.to_tool_list()
print(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó: {[t.metadata.name for t in wiki_tools]}")

code_output_path = "./code_output"
os.makedirs(code_output_path, exist_ok=True)


def write_file(file_path: str, content: str) -> str:
    """
    –ó–∞–ø–∏—Å—É—î —Ç–µ–∫—Å—Ç–æ–≤–∏–π –≤–º—ñ—Å—Ç —É —Ñ–∞–π–ª. –ü—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó './code_output'.
    –Ø–∫—â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î, –≤—ñ–Ω –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–∏–π.
    file_path: –≤—ñ–¥–Ω–æ—Å–Ω–∞ –Ω–∞–∑–≤–∞ —Ñ–∞–π–ª—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 'my_script.py' –∞–±–æ 'report.md'.
    content: –¢–µ–∫—Å—Ç, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∏—Å–∞—Ç–∏ —É —Ñ–∞–π–ª.
    """
    safe_path = os.path.join(code_output_path, os.path.basename(file_path))
    try:
        with open(safe_path, 'w', encoding='utf-8') as f:
            f.write(content)
        return f"–§–∞–π–ª '{safe_path}' —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ."
    except Exception as e:
        return f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å—ñ —Ñ–∞–π–ª—É '{safe_path}': {e}"


def run_python_script(file_path: str) -> str:
    """
    –í–∏–∫–æ–Ω—É—î Python-—Å–∫—Ä–∏–ø—Ç —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –π–æ–≥–æ –≤–∏–≤—ñ–¥ (stdout).
    –ü—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –∑ —Ñ–∞–π–ª–∞–º–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó './code_output'.
    file_path: –≤—ñ–¥–Ω–æ—Å–Ω–∞ –Ω–∞–∑–≤–∞ —Ñ–∞–π–ª—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 'my_script.py'.
    """
    safe_path = os.path.join(code_output_path, os.path.basename(file_path))
    if not os.path.exists(safe_path):
        return f"–ü–æ–º–∏–ª–∫–∞: –§–∞–π–ª '{safe_path}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    try:
        result = subprocess.run(
            ['python', safe_path],
            capture_output=True,
            text=True,
            encoding='utf-8',
            timeout=30
        )
        if result.returncode == 0:
            return f"–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è '{safe_path}':\n{result.stdout}"
        else:
            return f"–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è '{safe_path}':\n{result.stderr}"
    except Exception as e:
        return f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É —Å–∫—Ä–∏–ø—Ç–∞ '{safe_path}': {e}"


writer_tool = FunctionTool.from_defaults(fn=write_file)
runner_tool = FunctionTool.from_defaults(fn=run_python_script)

python_tools = [writer_tool, runner_tool]
print(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∫–∞—Å—Ç–æ–º–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–ª—è —Ñ–∞–π–ª—ñ–≤: {[t.metadata.name for t in python_tools]}")

all_tools = wiki_tools + python_tools

print("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–≥–µ–Ω—Ç–∞ '–î–æ—Å–ª—ñ–¥–Ω–∏–∫-–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç'...")
system_prompt = """
–¢–∏ ‚Äî AI-–∞–≥–µ–Ω—Ç "–î–æ—Å–ª—ñ–¥–Ω–∏–∫-–ü—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç". –¢–≤–æ—è –º–µ—Ç–∞ ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è, –∫–æ–º–±—ñ–Ω—É—é—á–∏ –ø–æ—à—É–∫ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —Ç–∞ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –∫–æ–¥—É.

–¢–≤—ñ–π —Ä–æ–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å:
1.  **–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è:** –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó (`wikipedia_search` –∞–±–æ `wikipedia_load_data`), —â–æ–± –∑–Ω–∞–π—Ç–∏ —Ñ–∞–∫—Ç–∏ (–¥–∞—Ç–∏, —ñ–º–µ–Ω–∞, —á–∏—Å–ª–∞).
2.  **–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è:** –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç `write_file`, —â–æ–± –Ω–∞–ø–∏—Å–∞—Ç–∏ Python-—Å–∫—Ä–∏–ø—Ç. –í–∫–∞–∑—É–π –ª–∏—à–µ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É (–Ω–∞–ø—Ä., 'script.py').
3.  **–í–∏–∫–æ–Ω–∞–Ω–Ω—è:** –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç `run_python_script`, —â–æ–± –≤–∏–∫–æ–Ω–∞—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–π —Å–∫—Ä–∏–ø—Ç —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑ –π–æ–≥–æ –≤–∏–≤–æ–¥—É.
4.  **–°–∏–Ω—Ç–µ–∑:** –ù–∞ –æ—Å–Ω–æ–≤—ñ –∑–Ω–∞–π–¥–µ–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–¥—É, —Å—Ñ–æ—Ä–º—É–ª—é–π —Ñ—ñ–Ω–∞–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å.
5.  **–ó–≤—ñ—Ç:** –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å–∏—Ç—å, –∑–±–µ—Ä–µ–∂–∏ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç —É —Ñ–∞–π–ª –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é `write_file`.

–¢–∏ –¥—ñ—î—à –∞–≤—Ç–æ–Ω–æ–º–Ω–æ —ñ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ. –ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.
"""

agent = FunctionAgent(
    tools=all_tools,
    llm=llm,
    system_prompt=system_prompt,
    verbose=True
)


async def main():
    task = (
        "–°–∫—ñ–ª—å–∫–∏ –ø–æ–≤–Ω–∏—Ö –¥–Ω—ñ–≤ –ø—Ä–æ–π—à–ª–æ –º—ñ–∂ –¥–∞—Ç–æ—é –≤–∏—Å–∞–¥–∫–∏ '–ê–ø–æ–ª–ª–æ–Ω-11' –Ω–∞ –ú—ñ—Å—è—Ü—å "
        "—ñ –¥–∞—Ç–æ—é –ø–µ—Ä—à–æ–≥–æ –∑–∞–ø—É—Å–∫—É —à–∞—Ç–ª—É '–ö–æ–ª—É–º–±—ñ—è' (–º—ñ—Å—ñ—è STS-1)? "
        "1. –ó–Ω–∞–π–¥–∏ –æ–±–∏–¥–≤—ñ –¥–∞—Ç–∏ –Ω–∞ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó. "
        "2. –ù–∞–ø–∏—à–∏ Python-—Å–∫—Ä–∏–ø—Ç 'date_calculator.py' –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ä—ñ–∑–Ω–∏—Ü—ñ –≤ –¥–Ω—è—Ö. "
        "3. –í–∏–∫–æ–Ω–∞–π —Å–∫—Ä–∏–ø—Ç. "
        "4. –ù–∞–ø–∏—à–∏ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç 'mission_report.md', –¥–µ –≤–∫–∞–∂–∏ –æ–±–∏–¥–≤—ñ –¥–∞—Ç–∏ —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤."
    )

    print(f"\nüöÄ –ó–∞–ø—É—Å–∫–∞—é –∞–≥–µ–Ω—Ç–∞ —ñ–∑ –∑–∞–≤–¥–∞–Ω–Ω—è–º: '{task}'\n")
    response = await agent.run(user_msg=task)

    print("\n‚úÖ –ó–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ!")
    print(f"–§—ñ–Ω–∞–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–≥–µ–Ω—Ç–∞: {response}")

    print("\n--- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ ---")
    report_path = os.path.join(code_output_path, "mission_report.md")
    if os.path.exists(report_path):
        print(f"\n–ó–≤—ñ—Ç –∑–Ω–∞–π–¥–µ–Ω–æ –≤ '{report_path}'. –ô–æ–≥–æ –≤–º—ñ—Å—Ç:")
        with open(report_path, 'r', encoding='utf-8') as f:
            print("---")
            print(f.read().strip())
            print("---")
    else:
        print("–ó–≤—ñ—Ç–Ω–∏–π —Ñ–∞–π–ª –Ω–µ –±—É–ª–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ.")


if __name__ == "__main__":
    asyncio.run(main())